package sk.xbanasm.stuba.want.softwarerouter.gui;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import sk.xbanasm.stuba.want.softwarerouter.routing.RouteTypeEnum;
import sk.xbanasm.stuba.want.softwarerouter.equip.Utils;
import sk.xbanasm.stuba.want.softwarerouter.machine.Router;
import sk.xbanasm.stuba.want.softwarerouter.routing.GatewayItem;

/**
 *
 * @author Martin Banas
 */
public class RouterGui extends javax.swing.JFrame {

    private Router router;
    private RouterGuiUpdater routerGuiUpdater;
    private Thread routerGuiUpdaterThread;

    public RouterGui() throws IOException {
        initComponents();

        BufferedImage image = null;
        try {
            image = ImageIO.read(new File("F:/VI.semester/WAN/zadanie/Maven project/SoftwareRouter/src/main/resources/routerIcon.jpg"));
        } catch (IOException ex) {
            Logger.getLogger(RouterGui.class.getName()).log(Level.SEVERE, null, ex);
        }
        ImageIcon icon = new ImageIcon(image);
        picture.setIcon(icon);

        router = new Router(this);

        routerGuiUpdater = new RouterGuiUpdater(this, router);
        routerGuiUpdaterThread = new Thread(routerGuiUpdater);
        routerGuiUpdaterThread.start();
        routerGuiUpdater.fillInterfacesTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        interfacesPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        interfacesTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        subnetMaskTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        ipAddressTextField = new javax.swing.JTextField();
        changeStateButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        arpPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        arpTable = new javax.swing.JTable();
        wibeArpTableButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        staticNetworkTextField = new javax.swing.JTextField();
        staticMaskTextField = new javax.swing.JTextField();
        staticForwardingTextField = new javax.swing.JTextField();
        addStaticRouteButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ipRouteTable = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        refreshTableButton = new javax.swing.JButton();
        deleteStaticButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        activateRipToggleButton = new javax.swing.JToggleButton();
        dynamicNetworkTextField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        addDynamicButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        activeDynamicNetworksTable = new javax.swing.JTable();
        removeDynamicButton = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        refreshRipTableButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        picture = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        interfacesPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        interfacesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Name", "Status", "IP address", "Subnet mask"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(interfacesTable);
        if (interfacesTable.getColumnModel().getColumnCount() > 0) {
            interfacesTable.getColumnModel().getColumn(0).setMinWidth(35);
            interfacesTable.getColumnModel().getColumn(0).setPreferredWidth(35);
            interfacesTable.getColumnModel().getColumn(0).setMaxWidth(35);
            interfacesTable.getColumnModel().getColumn(1).setResizable(false);
            interfacesTable.getColumnModel().getColumn(2).setResizable(false);
            interfacesTable.getColumnModel().getColumn(3).setResizable(false);
            interfacesTable.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Interfaces list");

        subnetMaskTextField.setText("255.255.255.0");

        jLabel5.setText("IP Address");

        ipAddressTextField.setText("192.168.");

        changeStateButton.setText("Change state");
        changeStateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeStateButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("Subnet mask");

        javax.swing.GroupLayout interfacesPanelLayout = new javax.swing.GroupLayout(interfacesPanel);
        interfacesPanel.setLayout(interfacesPanelLayout);
        interfacesPanelLayout.setHorizontalGroup(
            interfacesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(interfacesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(interfacesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 986, Short.MAX_VALUE)
                    .addGroup(interfacesPanelLayout.createSequentialGroup()
                        .addGroup(interfacesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(changeStateButton)
                            .addGroup(interfacesPanelLayout.createSequentialGroup()
                                .addGroup(interfacesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(interfacesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(subnetMaskTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ipAddressTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        interfacesPanelLayout.setVerticalGroup(
            interfacesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(interfacesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(interfacesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ipAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(interfacesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subnetMaskTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(changeStateButton)
                .addContainerGap())
        );

        arpPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("ARP table");

        arpTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Ip address", "Mac address", "Interface"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(arpTable);
        if (arpTable.getColumnModel().getColumnCount() > 0) {
            arpTable.getColumnModel().getColumn(0).setMinWidth(35);
            arpTable.getColumnModel().getColumn(0).setPreferredWidth(35);
            arpTable.getColumnModel().getColumn(0).setMaxWidth(35);
            arpTable.getColumnModel().getColumn(1).setResizable(false);
            arpTable.getColumnModel().getColumn(2).setResizable(false);
            arpTable.getColumnModel().getColumn(3).setResizable(false);
        }

        wibeArpTableButton.setText("Wipe ARP table");
        wibeArpTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wibeArpTableButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout arpPanelLayout = new javax.swing.GroupLayout(arpPanel);
        arpPanel.setLayout(arpPanelLayout);
        arpPanelLayout.setHorizontalGroup(
            arpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(arpPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(arpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(arpPanelLayout.createSequentialGroup()
                        .addComponent(wibeArpTableButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(arpPanelLayout.createSequentialGroup()
                        .addGroup(arpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(arpPanelLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane3))
                        .addContainerGap())))
        );
        arpPanelLayout.setVerticalGroup(
            arpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(arpPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(wibeArpTableButton)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(arpPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(interfacesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(interfacesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(arpPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Main", jPanel1);

        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Static route");

        jLabel1.setText("Network address");

        jLabel2.setText("Mask");

        jLabel9.setText("Forwarding address");

        staticNetworkTextField.setText("192.168.");

        staticMaskTextField.setText("255.255.255.0");

        staticForwardingTextField.setText("192.168.");

        addStaticRouteButton.setText("Add route");
        addStaticRouteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStaticRouteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(staticMaskTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(staticForwardingTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(staticNetworkTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel8)
                            .addComponent(addStaticRouteButton))
                        .addContainerGap(29, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(staticNetworkTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(staticMaskTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(staticForwardingTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addStaticRouteButton)
                .addContainerGap())
        );

        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        ipRouteTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Type", "Network", "Mask", "Gateway", "Cost"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(ipRouteTable);
        if (ipRouteTable.getColumnModel().getColumnCount() > 0) {
            ipRouteTable.getColumnModel().getColumn(0).setMinWidth(35);
            ipRouteTable.getColumnModel().getColumn(0).setPreferredWidth(35);
            ipRouteTable.getColumnModel().getColumn(0).setMaxWidth(35);
            ipRouteTable.getColumnModel().getColumn(1).setResizable(false);
            ipRouteTable.getColumnModel().getColumn(2).setResizable(false);
            ipRouteTable.getColumnModel().getColumn(3).setResizable(false);
            ipRouteTable.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("Routing table");

        refreshTableButton.setText("Refresh table");
        refreshTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTableButtonActionPerformed(evt);
            }
        });

        deleteStaticButton.setText("Delete static route");
        deleteStaticButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteStaticButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(refreshTableButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deleteStaticButton)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(refreshTableButton)
                    .addComponent(deleteStaticButton)))
        );

        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Dynamic RIPv2 routing");

        activateRipToggleButton.setText("Activate");
        activateRipToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activateRipToggleButtonActionPerformed(evt);
            }
        });

        dynamicNetworkTextField.setText("192.168.");
        dynamicNetworkTextField.setEnabled(false);

        jLabel12.setText("Network address");

        addDynamicButton.setText("Add");
        addDynamicButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDynamicButtonActionPerformed(evt);
            }
        });

        activeDynamicNetworksTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Network", "Interface"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        activeDynamicNetworksTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(activeDynamicNetworksTable);
        if (activeDynamicNetworksTable.getColumnModel().getColumnCount() > 0) {
            activeDynamicNetworksTable.getColumnModel().getColumn(0).setMinWidth(30);
            activeDynamicNetworksTable.getColumnModel().getColumn(0).setPreferredWidth(30);
            activeDynamicNetworksTable.getColumnModel().getColumn(0).setMaxWidth(30);
        }

        removeDynamicButton.setText("Remove selected network");
        removeDynamicButton.setEnabled(false);
        removeDynamicButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeDynamicButtonActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("List of active networks");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Add RIPv2 network");

        refreshRipTableButton.setText("Refresh table");
        refreshRipTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshRipTableButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(dynamicNetworkTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(addDynamicButton)
                    .addComponent(activateRipToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(53, 53, 53)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(refreshRipTableButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(removeDynamicButton)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(activateRipToggleButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(dynamicNetworkTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(0, 19, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addDynamicButton)
                    .addComponent(removeDynamicButton)
                    .addComponent(refreshRipTableButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Routing", jPanel2);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel7.setText("Bananov software router");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(picture, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jTabbedPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(picture, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void wibeArpTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wibeArpTableButtonActionPerformed
        router.getForwarder().getArpTable().wipeArpTable();
    }//GEN-LAST:event_wibeArpTableButtonActionPerformed

    private void changeStateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeStateButtonActionPerformed
        if (interfacesTable.getSelectedRow() != -1) {
            if (router.getInterfaces().get(interfacesTable.getSelectedRow()).getStatus().equals("Down")) {
                if (ipAddressTextField.getText().equals("") || subnetMaskTextField.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, "Fill in IP address and subnet mask!", "", JOptionPane.YES_OPTION);
                } else {
                    try {
                        router.getInterfaces().get(interfacesTable.getSelectedRow()).noShutdown(ipAddressTextField.getText(), subnetMaskTextField.getText());
                    } catch (UnknownHostException ex) {
                        Logger.getLogger(RouterGui.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } else {
                router.getInterfaces().get(interfacesTable.getSelectedRow()).shutdown();
            }
        }
        routerGuiUpdater.fillInterfacesTable();
    }//GEN-LAST:event_changeStateButtonActionPerformed

    private void addStaticRouteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStaticRouteButtonActionPerformed
        if (!staticNetworkTextField.getText().equals("") && !staticMaskTextField.getText().equals("") && !staticForwardingTextField.getText().equals("")) {
            try {
                router.getRoutingTable().addRoute(RouteTypeEnum.STATIC, Utils.ipAddressToByteArray(staticNetworkTextField.getText()), Utils.ipAddressToByteArray(staticMaskTextField.getText()), null, new GatewayItem(Utils.ipAddressToByteArray(staticForwardingTextField.getText()), 0));
                routerGuiUpdater.fillipRouteTable();
            } catch (UnknownHostException ex) {
                Logger.getLogger(RouterGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Fill in network address, network mask and forwarding router's address!", "", JOptionPane.YES_OPTION);
        }
    }//GEN-LAST:event_addStaticRouteButtonActionPerformed

    private void refreshTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTableButtonActionPerformed
        routerGuiUpdater.fillipRouteTable();
    }//GEN-LAST:event_refreshTableButtonActionPerformed

    private void deleteStaticButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteStaticButtonActionPerformed
        if (ipRouteTable.getSelectedRow() != -1) {
            if (router.getRoutingTable().getRoutingTableList().get(ipRouteTable.getSelectedRow()).getRouteType().equals(RouteTypeEnum.STATIC)) {
                router.getRoutingTable().getRoutingTableList().remove(ipRouteTable.getSelectedRow());
                routerGuiUpdater.fillipRouteTable();
            }
        }
    }//GEN-LAST:event_deleteStaticButtonActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        switch (jTabbedPane1.getSelectedIndex()) {
            case 0: {
                routerGuiUpdater.fillInterfacesTable();
                break;
            }
            case 1: {
                routerGuiUpdater.fillipRouteTable();
                break;
            }
        }
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void activateRipToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activateRipToggleButtonActionPerformed
        if (activateRipToggleButton.getText().equals("Activate")) {
            try {
                activateRipToggleButton.setText("Deactivate");
                dynamicNetworkTextField.setEnabled(true);
                addDynamicButton.setEnabled(true);
                activeDynamicNetworksTable.setEnabled(true);
                removeDynamicButton.setEnabled(true);
                
                router.getRipManager().activateRipOnIface(Utils.ipAddressToByteArray("192.168.2.0"));
                router.getRipManager().activateRipOnIface(Utils.ipAddressToByteArray("192.168.4.0"));
                router.getRipManager().activateRipOnIface(Utils.ipAddressToByteArray("192.168.9.0"));
                routerGuiUpdater.fillActiveDynamicNetworksTable();
            } catch (UnknownHostException ex) {
                Logger.getLogger(RouterGui.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        } else {
            activateRipToggleButton.setText("Activate");
            dynamicNetworkTextField.setEnabled(false);
            addDynamicButton.setEnabled(false);
            activeDynamicNetworksTable.setEnabled(false);
            removeDynamicButton.setEnabled(false);

            router.getRipManager().deactivateRip();
            routerGuiUpdater.fillActiveDynamicNetworksTable();
            routerGuiUpdater.fillipRouteTable();
        }
    }//GEN-LAST:event_activateRipToggleButtonActionPerformed

    private void addDynamicButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDynamicButtonActionPerformed
        if (!dynamicNetworkTextField.getText().equals("")) {
            try {
                router.getRipManager().activateRipOnIface(Utils.ipAddressToByteArray(dynamicNetworkTextField.getText()));
                routerGuiUpdater.fillActiveDynamicNetworksTable();
            } catch (UnknownHostException ex) {
                Logger.getLogger(RouterGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Fill in network address!", "", JOptionPane.YES_OPTION);
        }
    }//GEN-LAST:event_addDynamicButtonActionPerformed

    private void removeDynamicButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeDynamicButtonActionPerformed
        if (activeDynamicNetworksTable.getSelectedRow() != -1) {
            router.getRipManager().deactivateRipOnIface(activeDynamicNetworksTable.getSelectedRow());
            routerGuiUpdater.fillActiveDynamicNetworksTable();
        }
    }//GEN-LAST:event_removeDynamicButtonActionPerformed

    private void refreshRipTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshRipTableButtonActionPerformed
        routerGuiUpdater.fillActiveDynamicNetworksTable();
    }//GEN-LAST:event_refreshRipTableButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RouterGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RouterGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RouterGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RouterGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new RouterGui().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(RouterGui.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    public JTable getInterfacesTable() {
        return interfacesTable;
    }

    public JTable getArpTable() {
        return arpTable;
    }

    public JTable getIpRouteTable() {
        return ipRouteTable;
    }

    public JTable getActiveDynamicNetworksTable() {
        return activeDynamicNetworksTable;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton activateRipToggleButton;
    private javax.swing.JTable activeDynamicNetworksTable;
    private javax.swing.JButton addDynamicButton;
    private javax.swing.JButton addStaticRouteButton;
    private javax.swing.JPanel arpPanel;
    private javax.swing.JTable arpTable;
    private javax.swing.JButton changeStateButton;
    private javax.swing.JButton deleteStaticButton;
    private javax.swing.JTextField dynamicNetworkTextField;
    private javax.swing.JPanel interfacesPanel;
    private javax.swing.JTable interfacesTable;
    private javax.swing.JTextField ipAddressTextField;
    private javax.swing.JTable ipRouteTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel picture;
    private javax.swing.JButton refreshRipTableButton;
    private javax.swing.JButton refreshTableButton;
    private javax.swing.JButton removeDynamicButton;
    private javax.swing.JTextField staticForwardingTextField;
    private javax.swing.JTextField staticMaskTextField;
    private javax.swing.JTextField staticNetworkTextField;
    private javax.swing.JTextField subnetMaskTextField;
    private javax.swing.JButton wibeArpTableButton;
    // End of variables declaration//GEN-END:variables
}
